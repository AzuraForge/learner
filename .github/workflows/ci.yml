name: AzuraForge Learner CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release: # Yeni: semantic-release tarafından yayınlanan etiketleri dinler
    types: [published]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions: # YENİ: GITHUB_TOKEN için gerekli izinler
      contents: write # repo'ya commit ve tag atabilmek için
      issues: write # changelog için
      pull-requests: write # pull request açabilmek için
    environment: # YENİ: Ortam belirteci, isteğe bağlı ama iyi pratik
      name: development 
    
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Semantic Release için tüm Git geçmişini çek

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-semantic-release # semantic-release'i önce kur
        # Bağımlılıklarını kur (learner, dolayısıyla core'u da çekecektir)
        pip install git+https://github.com/AzuraForge/core.git@v0.1.3 # core'un güncel versiyonuna işaret etmeli
        pip install -e . # Kendisini kur

    # Geçici olarak devre dışı bırakılan test ve lint adımları
    - name: Check code format with Black
      if: false # GEÇİCİ OLARAK DEVRE DIŞI BIRAKILDI
      run: |
        pip install black
        black --check .
    
    - name: Lint with flake8
      if: false # GEÇİCİ OLARAK DEVRE DIŞI BIRAKILDI
      run: |
        pip install flake8
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      if: false # GEÇİCİ OLARAK DEVRE DIŞI BIRAKILDI
      run: |
        pytest
    
    # YENİ ADIM: Otomatik Versiyonlama ve Etiketleme
    - name: Semantic Release
      # Sadece main branch'ine push'ta çalışır ve pull_request event'inde çalışmaz
      # Bot'un kendi commitlerini tekrar tetiklemesini engelle
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.event.pusher.name != 'github-actions[bot]'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        semantic-release publish --no-build --no-upload-to-pypi # Sadece versiyonu artır ve tag at
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Organizasyon seviyesindeki secret kullanılacak